\contentsline {part}{I\hspace {1em}Notes}{3}
\contentsline {chapter}{\numberline {1}January 15, 2012}{4}
\contentsline {section}{\numberline {1.1}Overview}{4}
\contentsline {subsection}{\numberline {1.1.1}Software development Life Cycle (Traditional Approach)}{4}
\contentsline {subsubsection}{Requirements Phase}{4}
\contentsline {subsubsection}{Analysis or Specification Phase}{4}
\contentsline {paragraph}{Problems with the Spec Document}{5}
\contentsline {subsubsection}{Design Phase}{5}
\contentsline {subsubsection}{Implementation Phase}{5}
\contentsline {subsubsection}{Maintenance Phase}{5}
\contentsline {subsubsection}{Retirement Phase}{6}
\contentsline {subsection}{\numberline {1.1.2}Four Components of the Software Engineering Enterprise}{6}
\contentsline {subsubsection}{Process}{6}
\contentsline {subsubsection}{Project}{6}
\contentsline {subsubsection}{People}{7}
\contentsline {subsubsection}{Product}{7}
\contentsline {chapter}{\numberline {2}January 17, 2013}{8}
\contentsline {section}{\numberline {2.1}Traditional Software Engineering Process}{8}
\contentsline {subsection}{\numberline {2.1.1}Historical Influences}{8}
\contentsline {subsection}{\numberline {2.1.2}Component Reuse}{8}
\contentsline {subsection}{\numberline {2.1.3}Key Expectations of Software Engineering}{8}
\contentsline {section}{\numberline {2.2}Methods}{9}
\contentsline {subsection}{\numberline {2.2.1}Waterfall Method}{9}
\contentsline {subsubsection}{Advantages}{9}
\contentsline {subsubsection}{Disadvantages}{10}
\contentsline {subsection}{\numberline {2.2.2}Rapid Prototype Model}{10}
\contentsline {subsubsection}{Advantages}{10}
\contentsline {subsubsection}{Disadvantages}{10}
\contentsline {subsection}{\numberline {2.2.3}Waterfall-Rapid Prototype Hybrid}{10}
\contentsline {subsection}{\numberline {2.2.4}Incremental Model}{10}
\contentsline {subsubsection}{Advantages}{10}
\contentsline {subsubsection}{Disadvantages}{11}
\contentsline {subsection}{\numberline {2.2.5}Spiral Model}{11}
\contentsline {subsubsection}{Advantages}{11}
\contentsline {subsubsection}{Disadvantages}{11}
\contentsline {section}{\numberline {2.3}Agile Methods}{12}
\contentsline {subsection}{\numberline {2.3.1}General}{12}
\contentsline {subsubsection}{Traits}{12}
\contentsline {subsubsection}{Principles Behind the Agile Manifesto}{12}
\contentsline {chapter}{\numberline {3}January 22, 2013}{14}
\contentsline {section}{\numberline {3.1}Refactoring}{14}
\contentsline {section}{\numberline {3.2}Teams}{14}
\contentsline {subsection}{\numberline {3.2.1}Team Structure}{14}
\contentsline {subsubsection}{Project Factors Related to Structure of the Team}{14}
\contentsline {subsubsection}{Jelled Team}{15}
\contentsline {subsubsection}{Why Don't All Teams Jell?}{15}
\contentsline {subsubsection}{Necessary Team Traits}{15}
\contentsline {subsubsection}{How to Make Personality Traits Work}{15}
\contentsline {subsection}{\numberline {3.2.2}Roles}{16}
\contentsline {subsection}{\numberline {3.2.3}Organizational Structures}{16}
\contentsline {subsubsection}{Democratic Team}{16}
\contentsline {subsubsection}{Hierarchical or Chief Programmer}{17}
\contentsline {subsubsection}{Team Manager/Team Leader}{17}
\contentsline {paragraph}{Technical Organizational Structure for Large Projects}{17}
\contentsline {subsubsection}{Synchronize-and-Stabilize Team}{17}
\contentsline {subsubsection}{Agile Team}{18}
\contentsline {chapter}{\numberline {4}January 24, 2013}{19}
\contentsline {section}{\numberline {4.1}Tools for Software Engineers}{19}
\contentsline {subsection}{\numberline {4.1.1}Analytic Tools}{19}
\contentsline {subsubsection}{Stepwise Refinement}{19}
\contentsline {subsubsection}{Cost-Benefit Analysis}{20}
\contentsline {subsubsection}{Divide-and-Conquer}{20}
\contentsline {subsubsection}{Separation of Concerns}{20}
\contentsline {subsubsection}{Software Metrics}{20}
\contentsline {subsection}{\numberline {4.1.2}CASE Tools}{21}
\contentsline {subsubsection}{Types of CASE Tools}{21}
\contentsline {subsubsection}{Grouped CASE Tools}{22}
\contentsline {section}{\numberline {4.2}Software Versions}{22}
\contentsline {chapter}{\numberline {5}January 29, 2013}{23}
\contentsline {section}{\numberline {5.1}Phases of Unified Process}{23}
\contentsline {subsection}{\numberline {5.1.1}Inception Phase}{23}
\contentsline {subsubsection}{Documentation in the Inception Phase}{24}
\contentsline {subsection}{\numberline {5.1.2}Elaboration Phase}{24}
\contentsline {subsubsection}{Elaboration Phase Deliverables}{24}
\contentsline {subsection}{\numberline {5.1.3}Construction Phase}{25}
\contentsline {subsubsection}{Construction Phase Deliverables}{25}
\contentsline {subsection}{\numberline {5.1.4}Transition Phase}{25}
\contentsline {subsubsection}{Transition Phase Deliverables}{25}
\contentsline {section}{\numberline {5.2}Testing}{25}
\contentsline {paragraph}{V and V}{26}
\contentsline {paragraph}{Use of the Term Testing}{26}
\contentsline {subsection}{\numberline {5.2.1}Fault, Failure, Error, Defect}{26}
\contentsline {section}{\numberline {5.3}Software Quality}{26}
\contentsline {subsection}{\numberline {5.3.1}Software Quality Assurance}{26}
\contentsline {subsection}{\numberline {5.3.2}Categories of Testing}{27}
\contentsline {paragraph}{Comparison of Walkthroughs and Inspections}{28}
